ls
clearPushBack()
---
cl
clear
title: "Lab 7"
library(MASS)
library(plyr)
library(ggplot2)
install.packages("plyr")
install.packages("ggplot2")
library(MASS)
library(plyr)
library(ggplot2)
smoking <- as.table(rbind(c(688, 650), c(21, 59)))
dimnames(smoking) <- list(has.smoked = c("yes", "no"),
lung.cancer = c("yes","no"))
smoking
# Edit me
library(MASS)
library(plyr)
library(ggplot2)
library(knitr)
install.packages("knitr")
---
title: "Data Analytics Lab Tutorial-Week 7"
author: "Srinidhi H"
output: word_document
---
###Agenda
- 2x2 tables, j x k tables
- ANOVA
- Linear regression
- Fitting linear regression models in R
- Diagnostic plots
- Interpreting regression coefficients
- Testing significance of factor variables
Let's begin by loading the packages we'll need to get started
```{r}
library(MASS)
library(plyr)
library(MASS)
library(plyr)
library(ggplot2)
library(knitr)
# Rename the columns to have more descriptive names
colnames(birthwt) <- c("birthwt.below.2500", "mother.age", "mother.weight",
"race", "mother.smokes", "previous.prem.labor", "hypertension", "uterine.irr",
"physician.visits", "birthwt.grams")
# Transform variables to factors with descriptive levels
birthwt <- transform(birthwt,
race = as.factor(mapvalues(race, c(1, 2, 3),
c("white","black", "other"))),
mother.smokes = as.factor(mapvalues(mother.smokes,
c(0,1), c("no", "yes"))),
hypertension = as.factor(mapvalues(hypertension,
c(0,1), c("no", "yes"))),
uterine.irr = as.factor(mapvalues(uterine.irr,
c(0,1), c("no", "yes")))
)
weight.smoke.tbl <- with(birthwt, table(birthwt.below.2500, mother.smokes))
weight.smoke.tbl
birthwt.fisher.test <- fisher.test(weight.smoke.tbl)
birthwt.fisher.test
attributes(birthwt.fisher.test)
chisq.test(weight.smoke.tbl)
# Manually enter the data
politics <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(politics) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
politics # display the data
politics.prop <- apply(politics, 1, FUN = function(x) {x / sum(x)})
politics.prop
colSums(politics.prop) # Check that columns sum to 1
politics.prop <- t(politics.prop) # Transpose the table
# Fix dimnames
dimnames(politics.prop) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
# Output
politics.prop
chisq.test(politics)
chisq.test(politics)
politics.dem.rep <- politics[,c(1,3)]
politics.dem.rep
# Run Fisher's exact test
fisher.test(politics.dem.rep)
library(reshape)
politics.prop
politics.melt <- melt(politics.prop, id=c("gender","party"))
politics.melt
ggplot(politics.melt, aes(x=party, y=value, fill=gender)) + geom_bar(position="dodge", stat="identity")
install.packages("reshape")
# Manually enter the data
politics <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(politics) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
politics # display the data
politics.prop <- apply(politics, 1, FUN = function(x) {x / sum(x)})
politics.prop
colSums(politics.prop) # Check that columns sum to 1
politics.prop <- t(politics.prop) # Transpose the table
# Fix dimnames
dimnames(politics.prop) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
# Output
politics.prop
chisq.test(politics)
weight.smoke.tbl <- with(birthwt, table(birthwt.below.2500, mother.smokes))
weight.smoke.tbl
birthwt.fisher.test <- fisher.test(weight.smoke.tbl)
birthwt.fisher.test
attributes(birthwt.fisher.test)
chisq.test(weight.smoke.tbl)
library(MASS)
quit(0
)
quit()
#a
vector1 <- runif(100,10,20)
#b
list1 <- lapply(1:100,function(x) runif(vector1[x]))
#c
lengths <- vector()
for(i in 1:100){
lengths[i] <- length(list1[[i]])
}
lengths
#d
sapply(list1,length)
#e
lapply(list1,length)
list1
lengths
vector1
setwd("~/work/BDDS/HeartDiseaseClassification")
library('e1071')
MyData <- read.csv(file="data/processed.cleveland.data", header=TRUE, sep=",")
col_names = c('age','sex','cp','trestbps','chol','fbs','restecg','thalach','exang','oldpeak','slope','ca','thal','num')
colnames(MyData)= col_names
MyData <- na.omit(MyData)
MyData<-MyData[!(MyData$ca=="?" | MyData$thal=='?'),]
MyData$ca<-as.factor(MyData$ca)
MyData$thal<-as.factor(MyData$thal)
MyData$ca<-as.numeric(MyData$ca)
MyData$thal<-as.numeric(MyData$thal)
MyData$num<-as.factor(MyData$num)
summary(MyData)
str(MyData)
x <- subset(MyData, select=-num)
y <- MyData$num
svm_model1 <- svm(x,y)
summary(svm_model1)
pred <- predict(svm_model1,x)
results <-table(pred,y)
print((results['0','0']+results['1','1']+results['2','2']+results['3','3']+results['4','4'])/sum(results))
